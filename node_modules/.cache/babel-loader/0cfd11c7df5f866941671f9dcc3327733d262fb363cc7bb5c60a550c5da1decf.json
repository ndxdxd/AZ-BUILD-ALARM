{"ast":null,"code":"var _jsxFileName = \"/Users/andytruong/motion-alarm/react-website-alarm/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport System from \"./System.js\";\nimport About from \"./About.js\";\nimport User from \"./User.js\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Router, Routes, Route, BrowserRouter } from 'react-router-dom';\nimport { NavBarBootstrap } from './navbarBS.js';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { getGlobalSound } from './soundUtils';\n/*The image src is currently temporary */\n/*System logs page will be considered the home page with both the logs + status\n  User Options will allow users to modify light/dark mode on the website?\n  About us is self explanatory\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst playSound = () => {\n  const selectedSound = getGlobalSound();\n  if (selectedSound) {\n    const audio = new Audio();\n    audio.src = selectedSound; // Use the base64 string as source\n    audio.play();\n  }\n};\nfunction App() {\n  _s();\n  const [recentEntry, setRecentEntry] = useState(null);\n  let prev = 3;\n  const savedPrev = localStorage.getItem('savedPrev');\n  if (savedPrev) {\n    prev = savedPrev;\n  }\n  const [audio] = useState(new Audio());\n  useEffect(() => {\n    const selectedSound = getGlobalSound();\n    if (selectedSound) {\n      audio.src = selectedSound; // Preload the sound\n    }\n  }, [audio]);\n  const playNotificationSound = () => {\n    if (audio.src) {\n      audio.play(); // Play the preloaded sound\n    }\n  };\n  const displayNotification = lockStatus => {\n    if (Notification.permission !== 'granted') {\n      Notification.requestPermission().then(permission => {\n        if (permission === 'granted') {\n          // Permission granted, you can now display notifications\n          new Notification('ask', {\n            body: 'You will now receive notifications.'\n          });\n        }\n      });\n    } else {\n      playNotificationSound();\n\n      // Notifications are already enabled\n      let notificationMessage = '';\n\n      // Determine the message based on lock status\n      if (lockStatus === 0) {\n        notificationMessage = 'Your lock has been opened';\n      } else if (lockStatus === 1) {\n        notificationMessage = 'Your lock has been closed';\n      }\n      if (notificationMessage !== '') {\n        new Notification('Change in lock status!', {\n          body: notificationMessage\n        });\n      }\n    }\n  };\n  const fetchRecentEntry = async () => {\n    try {\n      const response = await axios.get('/api/alarmStatus/recentInsert'); // Endpoint to get recent entry\n      setRecentEntry(response.data);\n      console.log(response);\n      // Process recent entry or trigger notification here\n      const status = response.data.alarmStatus.lockedStatus;\n      console.log(status);\n      if (status != prev) {\n        localStorage.setItem('savedPrev', JSON.stringify(status));\n        prev = status;\n        displayNotification(status);\n      }\n    } catch (error) {\n      console.error('Error fetching recent entry:', error);\n    }\n  };\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetchRecentEntry();\n    }, 5000); // Polling interval in milliseconds (e.g., every 5 seconds)\n\n    return () => clearInterval(interval); // Cleanup on component unmount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(NavBarBootstrap, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(System, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/System\",\n        element: /*#__PURE__*/_jsxDEV(System, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/About\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/User\",\n        element: /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"etmVyq97kc3RyHndZQzKMVbZ3F4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["System","About","User","Router","Routes","Route","BrowserRouter","NavBarBootstrap","axios","React","useState","useEffect","getGlobalSound","jsxDEV","_jsxDEV","playSound","selectedSound","audio","Audio","src","play","App","_s","recentEntry","setRecentEntry","prev","savedPrev","localStorage","getItem","playNotificationSound","displayNotification","lockStatus","Notification","permission","requestPermission","then","body","notificationMessage","fetchRecentEntry","response","get","data","console","log","status","alarmStatus","lockedStatus","setItem","JSON","stringify","error","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/andytruong/motion-alarm/react-website-alarm/src/App.js"],"sourcesContent":["import './App.css';\nimport System from \"./System.js\"\nimport About from \"./About.js\"\nimport User from \"./User.js\"\nimport 'bootstrap/dist/css/bootstrap.css'\nimport {Router, Routes, Route, BrowserRouter} from 'react-router-dom';\nimport { NavBarBootstrap } from './navbarBS.js';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { getGlobalSound } from './soundUtils';\n/*The image src is currently temporary */\n/*System logs page will be considered the home page with both the logs + status\n  User Options will allow users to modify light/dark mode on the website?\n  About us is self explanatory\n*/\nconst playSound = () => {\n  const selectedSound = getGlobalSound();\n\n  if (selectedSound) {\n    const audio = new Audio();\n    audio.src = selectedSound; // Use the base64 string as source\n    audio.play();\n  }\n};\n\nfunction App() {\n  const [recentEntry, setRecentEntry] = useState(null);\n  let prev = 3;\n  const savedPrev = localStorage.getItem('savedPrev');\n  if (savedPrev){\n    prev = savedPrev\n  }\n  const [audio] = useState(new Audio());\n\n  useEffect(() => {\n    const selectedSound = getGlobalSound();\n\n    if (selectedSound) {\n      audio.src = selectedSound; // Preload the sound\n    }\n  }, [audio]);\n  const playNotificationSound = () => {\n    if (audio.src) {\n      audio.play(); // Play the preloaded sound\n    }\n  };\n\n  const displayNotification = (lockStatus) => {\n    if (Notification.permission !== 'granted') {\n      Notification.requestPermission().then(permission => {\n        if (permission === 'granted') {\n          // Permission granted, you can now display notifications\n          new Notification('ask', {\n            body: 'You will now receive notifications.'\n          });\n        }\n      });\n    } else {\n      playNotificationSound();\n      \n      // Notifications are already enabled\n      let notificationMessage = '';\n\n      // Determine the message based on lock status\n      if (lockStatus === 0) {\n        notificationMessage = 'Your lock has been opened';\n      } else if (lockStatus === 1) {\n        notificationMessage = 'Your lock has been closed';\n      }\n\n      if (notificationMessage !== '') {\n\n        new Notification('Change in lock status!', {\n          body: notificationMessage\n        });\n      }\n    }\n  };\n\n  const fetchRecentEntry = async () => {\n      try {\n          const response = await axios.get('/api/alarmStatus/recentInsert'); // Endpoint to get recent entry\n          setRecentEntry(response.data);\n          \n          console.log(response)\n          // Process recent entry or trigger notification here\n          const status = response.data.alarmStatus.lockedStatus\n\n          console.log(status)\n          \n          if (status != prev){\n            localStorage.setItem('savedPrev', JSON.stringify(status));\n            prev = status\n            displayNotification(status)\n          }\n        \n          \n\n          \n\n      } catch (error) {\n          console.error('Error fetching recent entry:', error);\n      }\n  };\n\n  useEffect(() => {\n      const interval = setInterval(() => {\n          fetchRecentEntry();\n      }, 5000); // Polling interval in milliseconds (e.g., every 5 seconds)\n\n      return () => clearInterval(interval); // Cleanup on component unmount\n  }, []);\n  \n  return (\n    \n    <BrowserRouter>\n      \n      <NavBarBootstrap/>\n      <Routes>\n        <Route path=\"/\" element={<System />} />\n        <Route path=\"/System\" element ={<System />}/>\n        <Route path=\"/About\" element ={<About />}/>\n        <Route path=\"/User\" element ={<User />}/>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}