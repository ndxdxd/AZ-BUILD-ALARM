{"ast":null,"code":"var _jsxFileName = \"/Users/andytruong/motion-alarm/react-website-alarm/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport System from \"./System.js\";\nimport About from \"./About.js\";\nimport User from \"./User.js\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Router, Routes, Route, BrowserRouter } from 'react-router-dom';\nimport { NavBarBootstrap } from './navbarBS.js';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { getGlobalSound } from './soundUtils';\n/*The image src is currently temporary */\n/*System logs page will be considered the home page with both the logs + status\n  User Options will allow users to modify light/dark mode on the website?\n  About us is self explanatory\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst playSound = () => {\n  const selectedSound = getGlobalSound();\n  if (selectedSound) {\n    const audio = new Audio();\n    audio.src = selectedSound; // Use the base64 string as source\n    audio.play();\n  }\n};\nfunction App() {\n  _s();\n  let userInteracted = false;\n  document.addEventListener('click', () => {\n    userInteracted = true;\n    console.log('User interacted with the page.');\n  });\n  const [recentEntry, setRecentEntry] = useState(null);\n  let prev = 3;\n  const savedPrev = localStorage.getItem('savedPrev');\n  if (savedPrev) {\n    prev = savedPrev;\n  }\n  const displayNotification = lockStatus => {\n    if (Notification.permission !== 'granted') {\n      Notification.requestPermission().then(permission => {\n        if (permission === 'granted') {\n          // Permission granted, you can now display notifications\n          new Notification('ask', {\n            body: 'You will now receive notifications.'\n          });\n        }\n      });\n    } else {\n      playSound();\n\n      // Notifications are already enabled\n      let notificationMessage = '';\n\n      // Determine the message based on lock status\n      if (lockStatus === 0) {\n        notificationMessage = 'Your lock has been opened';\n      } else if (lockStatus === 1) {\n        notificationMessage = 'Your lock has been closed';\n      }\n      if (notificationMessage !== '') {\n        new Notification('Change in lock status!', {\n          body: notificationMessage\n        });\n      }\n    }\n  };\n  const fetchRecentEntry = async () => {\n    try {\n      const response = await axios.get('/api/alarmStatus/recentInsert'); // Endpoint to get recent entry\n      setRecentEntry(response.data);\n      console.log(response);\n      // Process recent entry or trigger notification here\n      const status = response.data.alarmStatus.lockedStatus;\n      console.log(status);\n      if (status != prev) {\n        localStorage.setItem('savedPrev', JSON.stringify(status));\n        prev = status;\n        displayNotification(status);\n      }\n    } catch (error) {\n      console.error('Error fetching recent entry:', error);\n    }\n  };\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetchRecentEntry();\n    }, 5000); // Polling interval in milliseconds (e.g., every 5 seconds)\n\n    return () => clearInterval(interval); // Cleanup on component unmount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(NavBarBootstrap, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(System, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/System\",\n        element: /*#__PURE__*/_jsxDEV(System, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/About\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/User\",\n        element: /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7ZzorCXh1qm7MqIV5UCsa7kSshc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["System","About","User","Router","Routes","Route","BrowserRouter","NavBarBootstrap","axios","React","useState","useEffect","getGlobalSound","jsxDEV","_jsxDEV","playSound","selectedSound","audio","Audio","src","play","App","_s","userInteracted","document","addEventListener","console","log","recentEntry","setRecentEntry","prev","savedPrev","localStorage","getItem","displayNotification","lockStatus","Notification","permission","requestPermission","then","body","notificationMessage","fetchRecentEntry","response","get","data","status","alarmStatus","lockedStatus","setItem","JSON","stringify","error","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/andytruong/motion-alarm/react-website-alarm/src/App.js"],"sourcesContent":["import './App.css';\nimport System from \"./System.js\"\nimport About from \"./About.js\"\nimport User from \"./User.js\"\nimport 'bootstrap/dist/css/bootstrap.css'\nimport {Router, Routes, Route, BrowserRouter} from 'react-router-dom';\nimport { NavBarBootstrap } from './navbarBS.js';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { getGlobalSound } from './soundUtils';\n/*The image src is currently temporary */\n/*System logs page will be considered the home page with both the logs + status\n  User Options will allow users to modify light/dark mode on the website?\n  About us is self explanatory\n*/\nconst playSound = () => {\n  const selectedSound = getGlobalSound();\n\n  if (selectedSound) {\n    const audio = new Audio();\n    audio.src = selectedSound; // Use the base64 string as source\n    audio.play();\n  }\n};\n\nfunction App() {\n  let userInteracted = false;\n\n  document.addEventListener('click', () => {\n  userInteracted = true;\n  console.log('User interacted with the page.');\n  });\n  const [recentEntry, setRecentEntry] = useState(null);\n  let prev = 3;\n  const savedPrev = localStorage.getItem('savedPrev');\n  if (savedPrev){\n    prev = savedPrev\n  }\n\n  \n  const displayNotification = (lockStatus) => {\n    if (Notification.permission !== 'granted') {\n      Notification.requestPermission().then(permission => {\n        if (permission === 'granted') {\n          // Permission granted, you can now display notifications\n          new Notification('ask', {\n            body: 'You will now receive notifications.'\n          });\n        }\n      });\n    } else {\n      playSound();\n      \n\n\n      // Notifications are already enabled\n      let notificationMessage = '';\n\n      // Determine the message based on lock status\n      if (lockStatus === 0) {\n        notificationMessage = 'Your lock has been opened';\n      } else if (lockStatus === 1) {\n        notificationMessage = 'Your lock has been closed';\n      }\n\n      if (notificationMessage !== '') {\n\n        new Notification('Change in lock status!', {\n          body: notificationMessage\n        });\n      }\n    }\n  };\n\n  const fetchRecentEntry = async () => {\n      try {\n          const response = await axios.get('/api/alarmStatus/recentInsert'); // Endpoint to get recent entry\n          setRecentEntry(response.data);\n          \n          console.log(response)\n          // Process recent entry or trigger notification here\n          const status = response.data.alarmStatus.lockedStatus\n\n          console.log(status)\n          \n          if (status != prev){\n            localStorage.setItem('savedPrev', JSON.stringify(status));\n            prev = status\n            displayNotification(status)\n          }\n        \n          \n\n          \n\n      } catch (error) {\n          console.error('Error fetching recent entry:', error);\n      }\n  };\n\n  useEffect(() => {\n      const interval = setInterval(() => {\n          fetchRecentEntry();\n      }, 5000); // Polling interval in milliseconds (e.g., every 5 seconds)\n\n      return () => clearInterval(interval); // Cleanup on component unmount\n  }, []);\n  \n  return (\n    \n    <BrowserRouter>\n      \n      <NavBarBootstrap/>\n      <Routes>\n        <Route path=\"/\" element={<System />} />\n        <Route path=\"/System\" element ={<System />}/>\n        <Route path=\"/About\" element ={<About />}/>\n        <Route path=\"/User\" element ={<User />}/>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,aAAa;AAChC,OAAOC,KAAK,MAAM,YAAY;AAC9B,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAO,kCAAkC;AACzC,SAAQC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,aAAa,QAAO,kBAAkB;AACrE,SAASC,eAAe,QAAQ,eAAe;AAC/C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,cAAc;AAC7C;AACA;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,MAAMC,aAAa,GAAGJ,cAAc,CAAC,CAAC;EAEtC,IAAII,aAAa,EAAE;IACjB,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAAC,CAAC;IACzBD,KAAK,CAACE,GAAG,GAAGH,aAAa,CAAC,CAAC;IAC3BC,KAAK,CAACG,IAAI,CAAC,CAAC;EACd;AACF,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,IAAIC,cAAc,GAAG,KAAK;EAE1BC,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAE,MAAM;IACzCF,cAAc,GAAG,IAAI;IACrBG,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;EAC7C,CAAC,CAAC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACpD,IAAIoB,IAAI,GAAG,CAAC;EACZ,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EACnD,IAAIF,SAAS,EAAC;IACZD,IAAI,GAAGC,SAAS;EAClB;EAGA,MAAMG,mBAAmB,GAAIC,UAAU,IAAK;IAC1C,IAAIC,YAAY,CAACC,UAAU,KAAK,SAAS,EAAE;MACzCD,YAAY,CAACE,iBAAiB,CAAC,CAAC,CAACC,IAAI,CAACF,UAAU,IAAI;QAClD,IAAIA,UAAU,KAAK,SAAS,EAAE;UAC5B;UACA,IAAID,YAAY,CAAC,KAAK,EAAE;YACtBI,IAAI,EAAE;UACR,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACLzB,SAAS,CAAC,CAAC;;MAIX;MACA,IAAI0B,mBAAmB,GAAG,EAAE;;MAE5B;MACA,IAAIN,UAAU,KAAK,CAAC,EAAE;QACpBM,mBAAmB,GAAG,2BAA2B;MACnD,CAAC,MAAM,IAAIN,UAAU,KAAK,CAAC,EAAE;QAC3BM,mBAAmB,GAAG,2BAA2B;MACnD;MAEA,IAAIA,mBAAmB,KAAK,EAAE,EAAE;QAE9B,IAAIL,YAAY,CAAC,wBAAwB,EAAE;UACzCI,IAAI,EAAEC;QACR,CAAC,CAAC;MACJ;IACF;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMnC,KAAK,CAACoC,GAAG,CAAC,+BAA+B,CAAC,CAAC,CAAC;MACnEf,cAAc,CAACc,QAAQ,CAACE,IAAI,CAAC;MAE7BnB,OAAO,CAACC,GAAG,CAACgB,QAAQ,CAAC;MACrB;MACA,MAAMG,MAAM,GAAGH,QAAQ,CAACE,IAAI,CAACE,WAAW,CAACC,YAAY;MAErDtB,OAAO,CAACC,GAAG,CAACmB,MAAM,CAAC;MAEnB,IAAIA,MAAM,IAAIhB,IAAI,EAAC;QACjBE,YAAY,CAACiB,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACL,MAAM,CAAC,CAAC;QACzDhB,IAAI,GAAGgB,MAAM;QACbZ,mBAAmB,CAACY,MAAM,CAAC;MAC7B;IAMJ,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZ1B,OAAO,CAAC0B,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACxD;EACJ,CAAC;EAEDzC,SAAS,CAAC,MAAM;IACZ,MAAM0C,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BZ,gBAAgB,CAAC,CAAC;IACtB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAMa,aAAa,CAACF,QAAQ,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAEN,oBAEEvC,OAAA,CAACR,aAAa;IAAAkD,QAAA,gBAEZ1C,OAAA,CAACP,eAAe;MAAAkD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAClB9C,OAAA,CAACV,MAAM;MAAAoD,QAAA,gBACL1C,OAAA,CAACT,KAAK;QAACwD,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEhD,OAAA,CAACd,MAAM;UAAAyD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvC9C,OAAA,CAACT,KAAK;QAACwD,IAAI,EAAC,SAAS;QAACC,OAAO,eAAGhD,OAAA,CAACd,MAAM;UAAAyD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC7C9C,OAAA,CAACT,KAAK;QAACwD,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAGhD,OAAA,CAACb,KAAK;UAAAwD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC3C9C,OAAA,CAACT,KAAK;QAACwD,IAAI,EAAC,OAAO;QAACC,OAAO,eAAGhD,OAAA,CAACZ,IAAI;UAAAuD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEpB;AAACtC,EAAA,CAhGQD,GAAG;AAAA0C,EAAA,GAAH1C,GAAG;AAkGZ,eAAeA,GAAG;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}