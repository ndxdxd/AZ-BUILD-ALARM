{"ast":null,"code":"var _jsxFileName = \"/Users/andytruong/motion-alarm/react-website-alarm/src/User.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './User.css'; // Make sure to import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = () => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  useEffect(() => {\n    // Check for saved preference in local storage\n    const savedMode = localStorage.getItem('darkMode');\n    if (savedMode) {\n      setIsDarkMode(JSON.parse(savedMode));\n    }\n  }, []);\n  useEffect(() => {\n    // Update class on the body based on dark mode state\n    document.body.classList.toggle('dark-mode', isDarkMode);\n    document.body.classList.toggle('light-mode', !isDarkMode);\n\n    // Save preference to local storage\n    localStorage.setItem('darkMode', JSON.stringify(isDarkMode));\n  }, [isDarkMode]);\n  const toggleDarkMode = () => {\n    setIsDarkMode(prevMode => !prevMode);\n  };\n  const requestNotificationPermission = () => {\n    if (Notification.permission !== 'granted') {\n      Notification.requestPermission().then(permission => {\n        if (permission === 'granted') {\n          // Permission granted, you can now display notifications\n          new Notification('Notifications Enabled', {\n            body: 'You will now receive notifications.'\n          });\n        }\n      });\n    } else {\n      // Notifications are already enabled\n      new Notification('Notifications Already Enabled', {\n        body: 'You are already receiving notifications.'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `user ${isDarkMode ? 'dark-mode' : 'light-mode'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: \"User Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dl-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Dark Mode Toggle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleDarkMode,\n          className: `dark-button ${isDarkMode ? 'dark' : 'light'}`,\n          children: isDarkMode ? 'Light Mode' : 'Dark Mode'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifs\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Enable Notifications?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: requestNotificationPermission,\n          className: `notification-button ${isDarkMode ? 'dark' : 'light'}`,\n          children: \"Enable Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sounds\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Noitifcation Sound\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"sound-form\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(User, \"jZSDCHM8qUYa7sOOCe+CR2toAGQ=\");\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","User","_s","isDarkMode","setIsDarkMode","savedMode","localStorage","getItem","JSON","parse","document","body","classList","toggle","setItem","stringify","toggleDarkMode","prevMode","requestNotificationPermission","Notification","permission","requestPermission","then","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","_c","$RefreshReg$"],"sources":["/Users/andytruong/motion-alarm/react-website-alarm/src/User.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './User.css'; // Make sure to import your CSS file\n\n\nconst User = () => {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  useEffect(() => {\n    // Check for saved preference in local storage\n    const savedMode = localStorage.getItem('darkMode');\n    if (savedMode) {\n      setIsDarkMode(JSON.parse(savedMode));\n    }\n  }, []);\n\n  useEffect(() => {\n    // Update class on the body based on dark mode state\n    document.body.classList.toggle('dark-mode', isDarkMode);\n    document.body.classList.toggle('light-mode', !isDarkMode);\n\n    // Save preference to local storage\n    localStorage.setItem('darkMode', JSON.stringify(isDarkMode));\n  }, [isDarkMode]);\n\n  const toggleDarkMode = () => {\n    setIsDarkMode(prevMode => !prevMode);\n  };\n\n  const requestNotificationPermission = () => {\n    if (Notification.permission !== 'granted') {\n      Notification.requestPermission().then(permission => {\n        if (permission === 'granted') {\n          // Permission granted, you can now display notifications\n          new Notification('Notifications Enabled', {\n            body: 'You will now receive notifications.'\n          });\n        }\n      });\n    } else {\n      // Notifications are already enabled\n      new Notification('Notifications Already Enabled', {\n        body: 'You are already receiving notifications.'\n      });\n    }\n  };\n\n  return (\n    <div className={`user ${isDarkMode ? 'dark-mode' : 'light-mode'}`}>\n      <div className=\"options-box\">\n        <h3 className=\"title\">User Options</h3>\n\n        <div className=\"dl-toggle\">\n          <h6>Dark Mode Toggle</h6>\n          <button onClick={toggleDarkMode} className={`dark-button ${isDarkMode ? 'dark' : 'light'}`}>\n            {isDarkMode ? 'Light Mode' : 'Dark Mode'}\n          </button>\n        </div>\n\n        <div className='notifs'>\n          <h6>Enable Notifications?</h6>\n          {/* Change class based on isDarkMode */}\n          <button onClick={requestNotificationPermission} className={`notification-button ${isDarkMode ? 'dark' : 'light'}`}>\n            Enable Notifications\n          </button>\n        </div>\n\n        <div className=\"sounds\">\n            <h6>Noitifcation Sound</h6>\n            <form className=\"sound-form\">\n                <input type=\"file\">\n\n                </input>\n            </form>\n        </div>\n\n      </div>\n    </div>\n  );\n};\n\nexport default User;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}