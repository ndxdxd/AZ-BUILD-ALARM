{"ast":null,"code":"var _jsxFileName = \"/Users/andytruong/motion-alarm/react-website-alarm/src/User.js\",\n  _s = $RefreshSig$();\nimport \"./User.css\";\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = () => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  useEffect(() => {\n    // Check for saved preference in local storage\n    const savedMode = localStorage.getItem('darkMode');\n    if (savedMode) {\n      setIsDarkMode(JSON.parse(savedMode));\n    }\n  }, []);\n  useEffect(() => {\n    // Update class on the body based on dark mode state\n    document.body.classList.toggle('dark-mode', isDarkMode);\n    document.body.classList.toggle('light-mode', !isDarkMode);\n\n    // Save preference to local storage\n    localStorage.setItem('darkMode', JSON.stringify(isDarkMode));\n  }, [isDarkMode]);\n  const toggleDarkMode = () => {\n    setIsDarkMode(prevMode => !prevMode);\n  };\n  const requestNotificationPermission = () => {\n    if (Notification.permission !== 'granted') {\n      Notification.requestPermission().then(permission => {\n        if (permission === 'granted') {\n          // Permission granted, you can now display notifications\n          new Notification('Notifications Enabled', {\n            body: 'You will now receive notifications.'\n          });\n        }\n      });\n    } else {\n      // Notifications are already enabled\n      new Notification('Notifications Already Enabled', {\n        body: 'You are already receiving notifications.'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: \"User Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dl-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Dark Mode Toggle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleDarkMode,\n          class: \"dark-button\",\n          children: isDarkMode ? 'Light Mode' : 'Dark Mode'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Notifications on/off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spacer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(User, \"jZSDCHM8qUYa7sOOCe+CR2toAGQ=\");\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","User","_s","isDarkMode","setIsDarkMode","savedMode","localStorage","getItem","JSON","parse","document","body","classList","toggle","setItem","stringify","toggleDarkMode","prevMode","requestNotificationPermission","Notification","permission","requestPermission","then","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","class","_c","$RefreshReg$"],"sources":["/Users/andytruong/motion-alarm/react-website-alarm/src/User.js"],"sourcesContent":["import \"./User.css\"\nimport React, { useState, useEffect } from 'react';\n\n\nconst User = () => {\n    const [isDarkMode, setIsDarkMode] = useState(false);\n\n    useEffect(() => {\n        // Check for saved preference in local storage\n        const savedMode = localStorage.getItem('darkMode');\n        if (savedMode) {\n            setIsDarkMode(JSON.parse(savedMode));\n        }\n    }, []);\n\n    useEffect(() => {\n        // Update class on the body based on dark mode state\n        document.body.classList.toggle('dark-mode', isDarkMode);\n        document.body.classList.toggle('light-mode', !isDarkMode);\n\n        // Save preference to local storage\n        localStorage.setItem('darkMode', JSON.stringify(isDarkMode));\n    }, [isDarkMode]);\n\n    const toggleDarkMode = () => {\n        setIsDarkMode(prevMode => !prevMode);\n    };\n    const requestNotificationPermission = () => {\n        if (Notification.permission !== 'granted') {\n          Notification.requestPermission().then(permission => {\n            if (permission === 'granted') {\n              // Permission granted, you can now display notifications\n              new Notification('Notifications Enabled', {\n                body: 'You will now receive notifications.'\n              });\n            }\n          });\n        } else {\n          // Notifications are already enabled\n          new Notification('Notifications Already Enabled', {\n            body: 'You are already receiving notifications.'\n          });\n        }\n      };\n    \n    return (\n        <div className=\"user\">\n            <div className=\"options-box\">\n\n                <h3 className=\"title\">User Options</h3>\n\n                <div className=\"dl-toggle\">\n                    <h6>Dark Mode Toggle</h6>\n                    <button\n                        onClick={toggleDarkMode}\n                        class=\"dark-button\"\n                    >\n                        {isDarkMode ? 'Light Mode' : 'Dark Mode'}\n                    </button>\n                    <h6>Notifications on/off</h6>\n                </div>\n\n                \n\n            </div>\n            <div className=\"spacer\">\n\n            </div>\n    \n        </div>\n    );\n    }\n\n    export default User;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}