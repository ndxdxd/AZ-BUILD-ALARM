{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nconst useNotification = () => {\n  _s();\n  const checkForNotifications = () => {\n    // Fetch the most recent insert from your backend\n    fetch('/recentItem').then(response => response.json()).then(recentItem => {\n      // Process the recentItem and trigger a notification if needed\n      if (recentItem !== null) {\n        // Example: Show a browser notification\n        if (Notification.permission === 'granted') {\n          new Notification('New Entry', {\n            body: `New entry added: ${JSON.stringify(recentItem)}`,\n            icon: './public/logo192.png' // Replace with your icon URL\n          });\n        }\n      }\n    }).catch(error => {\n      console.error('Error fetching recent item:', error);\n    });\n  };\n  useEffect(() => {\n    // Check for notifications on a specific interval\n    const interval = setInterval(checkForNotifications, 50000); // Adjust the interval as needed\n    return () => clearInterval(interval); // Cleanup on unmount\n  }, []);\n};\n_s(useNotification, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default useNotification;","map":{"version":3,"names":["useEffect","useNotification","_s","checkForNotifications","fetch","then","response","json","recentItem","Notification","permission","body","JSON","stringify","icon","catch","error","console","interval","setInterval","clearInterval"],"sources":["/Users/andytruong/motion-alarm/react-website-alarm/src/useNotification.js"],"sourcesContent":["import { useEffect } from 'react';\n\nconst useNotification = () => {\n  const checkForNotifications = () => {\n    // Fetch the most recent insert from your backend\n    fetch('/recentItem')\n      .then(response => response.json())\n      .then(recentItem => {\n        // Process the recentItem and trigger a notification if needed\n        if (recentItem !== null) {\n          // Example: Show a browser notification\n          if (Notification.permission === 'granted') {\n            new Notification('New Entry', {\n              body: `New entry added: ${JSON.stringify(recentItem)}`,\n              icon: './public/logo192.png' // Replace with your icon URL\n            });\n          }\n        }\n      })\n      .catch(error => {\n        console.error('Error fetching recent item:', error);\n      });\n  };\n\n  useEffect(() => {\n    // Check for notifications on a specific interval\n    const interval = setInterval(checkForNotifications, 50000); // Adjust the interval as needed\n    return () => clearInterval(interval); // Cleanup on unmount\n  }, []);\n};\n\nexport default useNotification;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAClC;IACAC,KAAK,CAAC,aAAa,CAAC,CACjBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,UAAU,IAAI;MAClB;MACA,IAAIA,UAAU,KAAK,IAAI,EAAE;QACvB;QACA,IAAIC,YAAY,CAACC,UAAU,KAAK,SAAS,EAAE;UACzC,IAAID,YAAY,CAAC,WAAW,EAAE;YAC5BE,IAAI,EAAG,oBAAmBC,IAAI,CAACC,SAAS,CAACL,UAAU,CAAE,EAAC;YACtDM,IAAI,EAAE,sBAAsB,CAAC;UAC/B,CAAC,CAAC;QACJ;MACF;IACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD,CAAC,CAAC;EACN,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd;IACA,MAAMkB,QAAQ,GAAGC,WAAW,CAAChB,qBAAqB,EAAE,KAAK,CAAC,CAAC,CAAC;IAC5D,OAAO,MAAMiB,aAAa,CAACF,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;AACR,CAAC;AAAChB,EAAA,CA3BID,eAAe;AA6BrB,eAAeA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}